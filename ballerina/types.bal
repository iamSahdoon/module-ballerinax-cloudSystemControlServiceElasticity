// AUTO-GENERATED FILE. DO NOT MODIFY.
// This file is auto-generated by the Ballerina OpenAPI tool.

import ballerina/constraint;
import ballerina/data.jsondata;
import ballerina/http;

public type AgentElasticCheckResponseBody AgentElasticCheckResponseBodyInner[];

public type ElasticityServersDetailsResponseBodyInner record {
    # Indicates if the current server or container is batch instance
    string isBatchContainer?;
    # Contains the name of the server on which the service will run.  In cloud mode, it refers to pod or container
    @constraint:String {maxLength: 100}
    string serverName?;
    # Contains the last contact time of running agent
    @constraint:String {maxLength: 12}
    string lastContactTime?;
};

public type AgentElasticCheckDetailsResponseBody AgentElasticCheckDetailsResponseBodyInner[];

public type ServiceElasticProfileBodyElasticity record {
    # Contains the date and time for elastic profile of the service at which the upscaling and downscaling of the processing agents would take place. If blank then the default number of agents is used for the processing
    @constraint:String {maxLength: 18}
    string elasticDateTime?;
    # Contains total number of processing agents for elastic profile
    @constraint:String {maxLength: 13}
    string elasticTotal?;
    # Contains minimum number of agents for elastic profile
    @constraint:String {maxLength: 14}
    string elasticMinimum?;
    # Contains the name of the job for which the elastic profile is enabled for upscaling and downscaling
    @constraint:String {maxLength: 25}
    string elasticJob?;
    # Contains maximum number of processing agents for elastic profile
    @constraint:String {maxLength: 14}
    string elasticMaximum?;
    # Contains the number of records for the elastic profile which controls the number of processing agents to be spawned or downscaled
    @constraint:String {maxLength: 18}
    string elasticQueueDepth?;
};

# Represents the Queries record for the operation: getElasticityServersDetails
public type GetElasticityServersDetailsQueries record {
    # The record from which the response should be displayed
    @http:Query {name: "page_start"}
    int:Signed32 pageStart?;
    # Unique id expected to get as part of response from Transact on every enquiry request
    @http:Query {name: "page_token"}
    string pageToken?;
    # The total number of records per page
    @http:Query {name: "page_size"}
    int:Signed32 pageSize?;
};

public type QueryHeader record {
    ScreenHeaderAudit audit?;
    # The record from which the response should be displayed
    @jsondata:Name {value: "page_start"}
    int:Signed32 pageStart?;
    # The total number of records present
    @jsondata:Name {value: "total_size"}
    int:Signed32 totalSize?;
    # Unique id expected to get as part of response from Transact on every enquiry request
    @jsondata:Name {value: "page_token"}
    string pageToken?;
    # Status of the API(success/failed)
    string status?;
    # The total number of records per page
    @jsondata:Name {value: "page_size"}
    int:Signed32 pageSize?;
};

# Represents the Headers record for the operation: getElasticityServersDetails
public type GetElasticityServersDetailsHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Indicates the pagination header attributes availability. If set to 'true', it fetches all the data
    boolean disablePagination?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# Represents the Queries record for the operation: createServiceElasticProfile
public type CreateServiceElasticProfileQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

public type AgentElasticCheckDetailsResponseBodyInner record {
    # Contains the date and time separated by '-'
    string dateTime?;
    # The number of agents currently running
    @constraint:Number {maxValue: 70}
    decimal runningAgent?;
    # Contains the maximum agents configured for the service
    @constraint:Number {maxValue: 70}
    decimal maximumAgent?;
    # The total number of agents expected to be run
    @constraint:Number {maxValue: 70}
    decimal totalAgent?;
    # Contains the minimum agents configured for the service
    @constraint:Number {maxValue: 70}
    decimal minimumAgent?;
    # Number of entries waiting to be processed in the Queue
    @constraint:String {maxLength: 70}
    string queueDepth?;
    # Contains the identifier name of the service that has to be executed
    @constraint:String {maxLength: 70}
    string serviceId?;
};

public type ServiceElasticCleanupResponseBody record {
    # Contains the time at which the pod is downscaled
    @constraint:String {maxLength: 11}
    string cleanupTime?;
    # Indicates the extension data
    record {} extensionData?;
};

# Represents the Queries record for the operation: amendServiceElasticParameter
public type AmendServiceElasticParameterQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

# Represents the Headers record for the operation: createServiceElasticProfile
public type CreateServiceElasticProfileHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type SystemParameterElasticResponseBody record {
    # Indicates the deployment mode setting. For example CLOUD for cloud deployment, otherwise null
    @constraint:String {maxLength: 14}
    string deploymentMode?;
    # Indicates the extension data
    record {} extensionData?;
};

# Represents the Headers record for the operation: amendServiceElasticParameter
public type AmendServiceElasticParameterHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# Provides a set of configurations for controlling the behaviours when communicating with a remote HTTP endpoint.
@display {label: "Connection Config"}
public type ConnectionConfig record {|
    # Provides Auth configurations needed when communicating with a remote HTTP endpoint.
    http:CredentialsConfig|ApiKeysConfig auth;
    # The HTTP version understood by the client
    http:HttpVersion httpVersion = http:HTTP_2_0;
    # Configurations related to HTTP/1.x protocol
    http:ClientHttp1Settings http1Settings = {};
    # Configurations related to HTTP/2 protocol
    http:ClientHttp2Settings http2Settings = {};
    # The maximum time to wait (in seconds) for a response before closing the connection
    decimal timeout = 30;
    # The choice of setting `forwarded`/`x-forwarded` header
    string forwarded = "disable";
    # Configurations associated with Redirection
    http:FollowRedirects followRedirects?;
    # Configurations associated with request pooling
    http:PoolConfiguration poolConfig?;
    # HTTP caching related configurations
    http:CacheConfig cache = {};
    # Specifies the way of handling compression (`accept-encoding`) header
    http:Compression compression = http:COMPRESSION_AUTO;
    # Configurations associated with the behaviour of the Circuit Breaker
    http:CircuitBreakerConfig circuitBreaker?;
    # Configurations associated with retrying
    http:RetryConfig retryConfig?;
    # Configurations associated with cookies
    http:CookieConfig cookieConfig?;
    # Configurations associated with inbound response size limits
    http:ResponseLimitConfigs responseLimits = {};
    # SSL/TLS-related options
    http:ClientSecureSocket secureSocket?;
    # Proxy server related options
    http:ProxyConfig proxy?;
    # Provides settings related to client socket configuration
    http:ClientSocketConfig socketConfig = {};
    # Enables the inbound payload validation functionality which provided by the constraint package. Enabled by default
    boolean validation = true;
    # Enables relaxed data binding on the client side. When enabled, `nil` values are treated as optional, 
    # and absent fields are handled as `nilable` types. Enabled by default.
    boolean laxDataBinding = true;
|};

public type ServiceElasticParameterResponseBody record {
    # Contains the setting for queue processing e.g ALL or particular job name. If set to ALL or a particular job name then the system will use the JMS queue processing otherwise system will use the standard job list processing feature
    @constraint:String {maxLength: 85}
    string queueJobs?;
    # Contains the setting for elastic scaling e.g Yes or No.When set to Yes the dynamic upscaling and downscaling system feature is enabled
    @constraint:String {maxLength: 19}
    string dynamicProvisioning?;
    # Indicates the extension data
    record {} extensionData?;
};

public type AgentElasticCheckResponseBodyInner record {
    # Status to determine requirements of the agents for scaling of services
    @constraint:String {maxLength: 4}
    string result?;
};

# SystemParameterElasticResponse
public type SystemParameterElasticResponse record {
    ScreenHeader header?;
    SystemParameterElasticResponseBody body?;
};

public type ScreenHeader record {
    # The status of the transaction
    string transactionStatus?;
    ScreenHeaderAudit audit?;
    # The Identifier of the record created
    string id?;
    # Status of the API(success/failed)
    string status?;
    # The unique identifier/Message Reference of the record created
    string uniqueIdentifier?;
};

# Represents the Headers record for the operation: getAgentElasticCheck
public type GetAgentElasticCheckHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Indicates the pagination header attributes availability. If set to 'true', it fetches all the data
    boolean disablePagination?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# Represents the Queries record for the operation: amendSystemParameterElastic
public type AmendSystemParameterElasticQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

# Represents the Headers record for the operation: amendSystemParameterElastic
public type AmendSystemParameterElasticHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# Represents the Queries record for the operation: getAgentElasticCheck
public type GetAgentElasticCheckQueries record {
    # The record from which the response should be displayed
    @http:Query {name: "page_start"}
    int:Signed32 pageStart?;
    # Unique id expected to get as part of response from Transact on every enquiry request
    @http:Query {name: "page_token"}
    string pageToken?;
    # The total number of records per page
    @http:Query {name: "page_size"}
    int:Signed32 pageSize?;
};

public type ElasticityServersDetailsResponseBody ElasticityServersDetailsResponseBodyInner[];

# ServiceElasticProfileResponse
public type ServiceElasticProfileResponse record {
    ScreenHeader header?;
    ServiceElasticProfileResponseBody body?;
};

# Represents the Queries record for the operation: createServiceElasticCleanup
public type CreateServiceElasticCleanupQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

# ServiceElasticCleanupResponse
public type ServiceElasticCleanupResponse record {
    ScreenHeader header?;
    ServiceElasticCleanupResponseBody body?;
};

# Represents the Queries record for the operation: getAgentElasticCheckDetails
public type GetAgentElasticCheckDetailsQueries record {
    # The record from which the response should be displayed
    @http:Query {name: "page_start"}
    int:Signed32 pageStart?;
    # Unique id expected to get as part of response from Transact on every enquiry request
    @http:Query {name: "page_token"}
    string pageToken?;
    # The total number of records per page
    @http:Query {name: "page_size"}
    int:Signed32 pageSize?;
};

public type ScreenHeaderAudit record {
    # Time taken to response by Transact
    @jsondata:Name {value: "T24_time"}
    int:Signed32 t24Time?;
    # Time taken to parse the response by IRIS
    @jsondata:Name {value: "responseParse_time"}
    decimal responseParseTime?;
    # The CURR.NO. of the record
    string versionNumber?;
    # Time taken to parse the request by IRIS
    @jsondata:Name {value: "requestParse_time"}
    decimal requestParseTime?;
};

# ServiceElasticParameterResponse
public type ServiceElasticParameterResponse record {
    ScreenHeader header?;
    ServiceElasticParameterResponseBody body?;
};

# Represents the Headers record for the operation: createServiceElasticCleanup
public type CreateServiceElasticCleanupHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# Represents the Headers record for the operation: getAgentElasticCheckDetails
public type GetAgentElasticCheckDetailsHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Indicates the pagination header attributes availability. If set to 'true', it fetches all the data
    boolean disablePagination?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# AgentElasticCheckResponse
public type AgentElasticCheckResponse record {
    QueryHeader header?;
    AgentElasticCheckResponseBody body?;
};

# Represents the Queries record for the operation: amendServiceElasticProfile
public type AmendServiceElasticProfileQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

# ElasticityServersDetailsResponse
public type ElasticityServersDetailsResponse record {
    QueryHeader header?;
    ElasticityServersDetailsResponseBody body?;
};

public type ServiceElasticProfileResponseBody record {
    # Contains the number of agents required
    @constraint:String {maxLength: 25}
    string agentsRequired?;
    # Defines the ability of the system parameters to upscale or downscale, depending on factors like time of the day, keys to process for a service, the stage of the COB etc
    ServiceElasticProfileBodyElasticity[] elasticity?;
    # Contains the name used for display or enrichment purposes
    @constraint:String {maxLength: 25}
    string displayName?;
    # Contains the time job was started
    @constraint:String {maxLength: 25}
    string startTime?;
    # Indicates the extension data
    record {} extensionData?;
};

# AgentElasticCheckDetailsResponse
public type AgentElasticCheckDetailsResponse record {
    QueryHeader header?;
    AgentElasticCheckDetailsResponseBody body?;
};

# Represents the Headers record for the operation: amendServiceElasticProfile
public type AmendServiceElasticProfileHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# Provides API key configurations needed when communicating with a remote HTTP endpoint.
public type ApiKeysConfig record {|
    string apikey;
|};
